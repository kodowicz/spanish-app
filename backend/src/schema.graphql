# import * from './generated/prisma.graphql'

input SignUpInput {
  email: String
  name: String
  password: String
}

input LoginInput {
  email: String
  password: String
}

input PasswordInput {
  password: String!
  confirmPassword: String!
}

type Message {
  message: String
}

type User {
  id: ID!
  name: String!
  email: String!
  draftSet: DraftSet
  editSet: EditSet
  sets: [Set!]
}

type Query {
  users: [User!]!
  user: User
  draftSet: DraftSet
  draftTerms(where: DraftTermWhereInput!): [DraftTerm]!
  sets: [Set!]!
  set(where: SetWhereUniqueInput!): Set
  editSet: EditSet
}

type Mutation {
  signup(data: SignUpInput!): User!
  signin(data: LoginInput!): User!
  signout: Message!
  updatePassword(data: PasswordInput!): Message!

  createDraftSet: DraftSet!
  updateDraftSet(
    data: DraftSetUpdateInput!
    where: DraftSetWhereUniqueInput!
  ): DraftSet!
  deleteDraftSet: DraftSet

  createDraftTerm(where: SetWhereUniqueInput!): DraftTerm!
  updateDraftTerm(
    data: DraftTermUpdateInput!
    where: DraftTermWhereUniqueInput!
  ): DraftTerm!
  deleteDraftTerm(where: DraftTermWhereUniqueInput!): DraftTerm!

  createSet: Set!
  updateSet: Set!
  deleteSet(where: SetWhereUniqueInput!): Message!

  createEditSet(where: SetWhereUniqueInput!): EditSet!
  updateEditSet(
    data: EditSetUpdateInput!
    where: EditSetWhereUniqueInput!
  ): EditSet!
  deleteEditSet: Message!

  createEditTerm(where: EditSetWhereUniqueInput!): EditTerm!
  updateEditTerm(
    data: EditTermUpdateInput!
    where: EditTermWhereUniqueInput!
  ): EditTerm!
  deleteEditTerm(where: EditTermWhereUniqueInput!): EditTerm!
}
